// Code generated by protoc-gen-go.
// source: third-party/vector-tile-spec/1.0.1/vector_tile.proto
// DO NOT EDIT!

/*
Package vector_tile is a generated protocol buffer package.

It is generated from these files:
	third-party/vector-tile-spec/1.0.1/vector_tile.proto

It has these top-level messages:
	Tile
*/
package vector_tile

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Tile_GeomType int32

const (
	Tile_UNKNOWN    Tile_GeomType = 0
	Tile_POINT      Tile_GeomType = 1
	Tile_LINESTRING Tile_GeomType = 2
	Tile_POLYGON    Tile_GeomType = 3
)

var Tile_GeomType_name = map[int32]string{
	0: "UNKNOWN",
	1: "POINT",
	2: "LINESTRING",
	3: "POLYGON",
}
var Tile_GeomType_value = map[string]int32{
	"UNKNOWN":    0,
	"POINT":      1,
	"LINESTRING": 2,
	"POLYGON":    3,
}

func (x Tile_GeomType) Enum() *Tile_GeomType {
	p := new(Tile_GeomType)
	*p = x
	return p
}
func (x Tile_GeomType) String() string {
	return proto.EnumName(Tile_GeomType_name, int32(x))
}
func (x *Tile_GeomType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Tile_GeomType_value, data, "Tile_GeomType")
	if err != nil {
		return err
	}
	*x = Tile_GeomType(value)
	return nil
}
func (Tile_GeomType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type Tile struct {
	Layers                       []*Tile_Layer `protobuf:"bytes,3,rep,name=layers" json:"layers,omitempty"`
	proto.XXX_InternalExtensions `json:"-"`
	XXX_unrecognized             []byte `json:"-"`
}

func (m *Tile) Reset()                    { *m = Tile{} }
func (m *Tile) String() string            { return proto.CompactTextString(m) }
func (*Tile) ProtoMessage()               {}
func (*Tile) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

var extRange_Tile = []proto.ExtensionRange{
	{16, 8191},
}

func (*Tile) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_Tile
}

func (m *Tile) GetLayers() []*Tile_Layer {
	if m != nil {
		return m.Layers
	}
	return nil
}

// Variant type encoding
type Tile_Value struct {
	// Exactly one of these values may be present in a valid message
	StringValue                  *string  `protobuf:"bytes,1,opt,name=string_value" json:"string_value,omitempty"`
	FloatValue                   *float32 `protobuf:"fixed32,2,opt,name=float_value" json:"float_value,omitempty"`
	DoubleValue                  *float64 `protobuf:"fixed64,3,opt,name=double_value" json:"double_value,omitempty"`
	IntValue                     *int64   `protobuf:"varint,4,opt,name=int_value" json:"int_value,omitempty"`
	UintValue                    *uint64  `protobuf:"varint,5,opt,name=uint_value" json:"uint_value,omitempty"`
	SintValue                    *int64   `protobuf:"zigzag64,6,opt,name=sint_value" json:"sint_value,omitempty"`
	BoolValue                    *bool    `protobuf:"varint,7,opt,name=bool_value" json:"bool_value,omitempty"`
	proto.XXX_InternalExtensions `json:"-"`
	XXX_unrecognized             []byte `json:"-"`
}

func (m *Tile_Value) Reset()                    { *m = Tile_Value{} }
func (m *Tile_Value) String() string            { return proto.CompactTextString(m) }
func (*Tile_Value) ProtoMessage()               {}
func (*Tile_Value) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

var extRange_Tile_Value = []proto.ExtensionRange{
	{8, 536870911},
}

func (*Tile_Value) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_Tile_Value
}

func (m *Tile_Value) GetStringValue() string {
	if m != nil && m.StringValue != nil {
		return *m.StringValue
	}
	return ""
}

func (m *Tile_Value) GetFloatValue() float32 {
	if m != nil && m.FloatValue != nil {
		return *m.FloatValue
	}
	return 0
}

func (m *Tile_Value) GetDoubleValue() float64 {
	if m != nil && m.DoubleValue != nil {
		return *m.DoubleValue
	}
	return 0
}

func (m *Tile_Value) GetIntValue() int64 {
	if m != nil && m.IntValue != nil {
		return *m.IntValue
	}
	return 0
}

func (m *Tile_Value) GetUintValue() uint64 {
	if m != nil && m.UintValue != nil {
		return *m.UintValue
	}
	return 0
}

func (m *Tile_Value) GetSintValue() int64 {
	if m != nil && m.SintValue != nil {
		return *m.SintValue
	}
	return 0
}

func (m *Tile_Value) GetBoolValue() bool {
	if m != nil && m.BoolValue != nil {
		return *m.BoolValue
	}
	return false
}

type Tile_Feature struct {
	Id *uint64 `protobuf:"varint,1,opt,name=id,def=0" json:"id,omitempty"`
	// Tags of this feature are encoded as repeated pairs of
	// integers. Even indexed values (n, beginning with 0) are
	// themselves indexes into the layer's keys list. Odd indexed
	// values (n+1) are indexes into the layer's values list.
	// The first (n=0) tag of a feature, therefore, has a key of
	// layer.keys[feature.tags[0]] and a value of
	// layer.values[feature.tags[1]].
	Tags []uint32 `protobuf:"varint,2,rep,packed,name=tags" json:"tags,omitempty"`
	// The type of geometry stored in this feature.
	Type *Tile_GeomType `protobuf:"varint,3,opt,name=type,enum=vector_tile.Tile_GeomType,def=0" json:"type,omitempty"`
	// Contains a stream of commands and parameters (vertices). The
	// repeat count is shifted to the left by 3 bits. This means
	// that the command has 3 bits (0-7). The repeat count
	// indicates how often this command is to be repeated. Defined
	// commands are:
	// - MoveTo:    1   (2 parameters follow)
	// - LineTo:    2   (2 parameters follow)
	// - ClosePath: 7   (no parameters follow)
	//
	// Commands are encoded as uint32 varints. Vertex parameters
	// are encoded as deltas to the previous position and, as they
	// may be negative, are further "zigzag" encoded as unsigned
	// 32-bit ints:
	//
	//   n = (n << 1) ^ (n >> 31)
	//
	// Ex.: MoveTo(3, 6), LineTo(8, 12), LineTo(20, 34), ClosePath
	// Encoded as: [ 9 6 12 18 10 12 24 44 15 ]
	//               |       |              `> [00001 111] command type 7 (ClosePath), length 1
	//               |       |       ===== relative LineTo(+12, +22) == LineTo(20, 34)
	//               |       | ===== relative LineTo(+5, +6) == LineTo(8, 12)
	//               |       `> [00010 010] = command type 2 (LineTo), length 2
	//               | ==== relative MoveTo(+3, +6)
	//               `> [00001 001] = command type 1 (MoveTo), length 1
	//
	// The original position is (0,0).
	Geometry         []uint32 `protobuf:"varint,4,rep,packed,name=geometry" json:"geometry,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Tile_Feature) Reset()                    { *m = Tile_Feature{} }
func (m *Tile_Feature) String() string            { return proto.CompactTextString(m) }
func (*Tile_Feature) ProtoMessage()               {}
func (*Tile_Feature) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 1} }

const Default_Tile_Feature_Id uint64 = 0
const Default_Tile_Feature_Type Tile_GeomType = Tile_UNKNOWN

func (m *Tile_Feature) GetId() uint64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return Default_Tile_Feature_Id
}

func (m *Tile_Feature) GetTags() []uint32 {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Tile_Feature) GetType() Tile_GeomType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_Tile_Feature_Type
}

func (m *Tile_Feature) GetGeometry() []uint32 {
	if m != nil {
		return m.Geometry
	}
	return nil
}

type Tile_Layer struct {
	// Any compliant implementation must first read the version
	// number encoded in this message and choose the correct
	// implementation for this version number before proceeding to
	// decode other parts of this message.
	Version *uint32 `protobuf:"varint,15,req,name=version,def=1" json:"version,omitempty"`
	Name    *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	// The actual features in this tile.
	Features []*Tile_Feature `protobuf:"bytes,2,rep,name=features" json:"features,omitempty"`
	// Dictionary encoding for keys
	Keys []string `protobuf:"bytes,3,rep,name=keys" json:"keys,omitempty"`
	// Dictionary encoding for values
	Values []*Tile_Value `protobuf:"bytes,4,rep,name=values" json:"values,omitempty"`
	// The bounding box in this tile spans from 0..4095 units
	Extent                       *uint32 `protobuf:"varint,5,opt,name=extent,def=4096" json:"extent,omitempty"`
	proto.XXX_InternalExtensions `json:"-"`
	XXX_unrecognized             []byte `json:"-"`
}

func (m *Tile_Layer) Reset()                    { *m = Tile_Layer{} }
func (m *Tile_Layer) String() string            { return proto.CompactTextString(m) }
func (*Tile_Layer) ProtoMessage()               {}
func (*Tile_Layer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 2} }

var extRange_Tile_Layer = []proto.ExtensionRange{
	{16, 536870911},
}

func (*Tile_Layer) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_Tile_Layer
}

const Default_Tile_Layer_Version uint32 = 1
const Default_Tile_Layer_Extent uint32 = 4096

func (m *Tile_Layer) GetVersion() uint32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return Default_Tile_Layer_Version
}

func (m *Tile_Layer) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Tile_Layer) GetFeatures() []*Tile_Feature {
	if m != nil {
		return m.Features
	}
	return nil
}

func (m *Tile_Layer) GetKeys() []string {
	if m != nil {
		return m.Keys
	}
	return nil
}

func (m *Tile_Layer) GetValues() []*Tile_Value {
	if m != nil {
		return m.Values
	}
	return nil
}

func (m *Tile_Layer) GetExtent() uint32 {
	if m != nil && m.Extent != nil {
		return *m.Extent
	}
	return Default_Tile_Layer_Extent
}

func init() {
	proto.RegisterType((*Tile)(nil), "vector_tile.Tile")
	proto.RegisterType((*Tile_Value)(nil), "vector_tile.Tile.Value")
	proto.RegisterType((*Tile_Feature)(nil), "vector_tile.Tile.Feature")
	proto.RegisterType((*Tile_Layer)(nil), "vector_tile.Tile.Layer")
	proto.RegisterEnum("vector_tile.Tile_GeomType", Tile_GeomType_name, Tile_GeomType_value)
}

func init() {
	proto.RegisterFile("third-party/vector-tile-spec/1.0.1/vector_tile.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 438 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x91, 0xcd, 0x6e, 0xd3, 0x40,
	0x14, 0x85, 0xf1, 0x78, 0x92, 0x38, 0xd7, 0x4d, 0x31, 0x03, 0x12, 0x21, 0xab, 0xa8, 0x1b, 0xa2,
	0xa2, 0xb8, 0x71, 0x54, 0x21, 0xe1, 0x0d, 0xa8, 0x12, 0x84, 0x88, 0xc8, 0xae, 0xc0, 0x80, 0x58,
	0x55, 0x6e, 0x33, 0x0d, 0x16, 0xae, 0xc7, 0x1a, 0x8f, 0x23, 0xbc, 0xe3, 0x55, 0x78, 0x00, 0xde,
	0x81, 0x47, 0xe3, 0x8e, 0x7f, 0xd4, 0x4a, 0xc5, 0x2b, 0xfb, 0xf3, 0x99, 0xb9, 0xe7, 0x9c, 0x0b,
	0xa7, 0xea, 0x7b, 0x22, 0xb7, 0xf3, 0x3c, 0x96, 0xaa, 0x3a, 0xd9, 0xf3, 0x2b, 0x25, 0xe4, 0x5c,
	0x25, 0x29, 0x9f, 0x17, 0x39, 0xbf, 0x3a, 0xf1, 0xdc, 0x85, 0xeb, 0xb5, 0xf8, 0x42, 0x63, 0x37,
	0x97, 0x42, 0x09, 0x66, 0xdf, 0x41, 0x47, 0x7f, 0x29, 0xd0, 0x08, 0x5f, 0xd8, 0x73, 0xe8, 0xa7,
	0x71, 0xc5, 0x65, 0x31, 0x36, 0xa7, 0xe6, 0xcc, 0x5e, 0x3e, 0x75, 0xef, 0x9e, 0xd4, 0x12, 0x77,
	0xa3, 0xff, 0x4f, 0x7e, 0x1b, 0xd0, 0xfb, 0x12, 0xa7, 0x25, 0x67, 0x4f, 0xe0, 0xa0, 0x50, 0x32,
	0xc9, 0x76, 0x17, 0x7b, 0xfd, 0x3d, 0x36, 0xa6, 0xc6, 0x6c, 0xc8, 0x1e, 0x83, 0x7d, 0x9d, 0x8a,
	0x58, 0xb5, 0x90, 0x20, 0x24, 0x5a, 0xba, 0x15, 0xe5, 0x65, 0xca, 0x5b, 0x6a, 0x22, 0x35, 0xd8,
	0x23, 0x18, 0x26, 0x59, 0x27, 0xa4, 0x88, 0x4c, 0xc6, 0x00, 0xca, 0x5b, 0xd6, 0x43, 0x46, 0x35,
	0x2b, 0x6e, 0x59, 0x1f, 0x19, 0xd3, 0xec, 0x52, 0x88, 0xb4, 0x65, 0x03, 0x64, 0xd6, 0xb1, 0x65,
	0x59, 0xce, 0x2f, 0x7c, 0xc8, 0xa4, 0x80, 0xc1, 0x3b, 0x1e, 0xab, 0x52, 0x72, 0x36, 0x02, 0x92,
	0x6c, 0x6b, 0x6b, 0xd4, 0x37, 0x16, 0xcc, 0x01, 0xaa, 0xe2, 0x5d, 0x81, 0xb6, 0xcc, 0xd9, 0xe8,
	0x8c, 0x38, 0x06, 0xf3, 0x90, 0x54, 0x79, 0x63, 0xe9, 0x70, 0x39, 0xb9, 0x1f, 0x7b, 0xc5, 0xc5,
	0x4d, 0x84, 0x0a, 0x7f, 0xf0, 0x39, 0xf8, 0x10, 0x84, 0x5f, 0x03, 0x4c, 0x63, 0xed, 0x10, 0x72,
	0x25, 0x2b, 0xb4, 0xdd, 0x5e, 0x34, 0xf9, 0x83, 0xc5, 0xd4, 0x15, 0xa1, 0xb9, 0xc1, 0x1e, 0x9b,
	0x4c, 0x44, 0x36, 0x7e, 0x38, 0x25, 0xb3, 0x91, 0x6f, 0x78, 0xec, 0x00, 0x68, 0x16, 0xdf, 0xe8,
	0x92, 0x08, 0x96, 0xf4, 0x02, 0xac, 0xeb, 0xc6, 0x60, 0x63, 0xc5, 0x5e, 0x3e, 0xbb, 0x3f, 0xb8,
	0x8b, 0x80, 0x47, 0x7f, 0xf0, 0xaa, 0x59, 0xcc, 0x50, 0x2f, 0xaa, 0x0e, 0x5d, 0xd4, 0xa3, 0xff,
	0xbb, 0xa8, 0x6e, 0x3d, 0x7d, 0xfe, 0x53, 0xf1, 0x4c, 0xd5, 0x35, 0x8e, 0x7c, 0x7a, 0xba, 0x78,
	0xf5, 0x12, 0x4b, 0x72, 0x9a, 0x92, 0x8e, 0x5e, 0x83, 0xd5, 0x45, 0x63, 0x36, 0x74, 0xe1, 0x9c,
	0x07, 0x6c, 0x08, 0xbd, 0xf3, 0x70, 0x1d, 0x44, 0x58, 0xce, 0x21, 0xc0, 0x66, 0x1d, 0xbc, 0xfd,
	0x14, 0x7d, 0x5c, 0x07, 0x2b, 0x87, 0x68, 0xdd, 0x79, 0xb8, 0xf9, 0xb6, 0x0a, 0x03, 0xc7, 0x3c,
	0xee, 0xe9, 0xab, 0xde, 0x9c, 0x91, 0xf7, 0xe6, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x47, 0x18,
	0x92, 0xa2, 0x8a, 0x02, 0x00, 0x00,
}
